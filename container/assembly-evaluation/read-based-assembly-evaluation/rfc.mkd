## Read based assembly benchmarking container

  * Version:    0.2.0
  * Maintainer: Peter Belmann <pbelmann@cebitec.uni-bielefeld.de>

### Contents
* Outline
* Inputs
   * General Definition
      * Description
      * Mounts
   * assemblies
   * reads
   * cache
* Outputs
   * evaluation
* Signature
* Example

### Outline

This specification describes the interface for containerised software to
evaluate a genome assembly in FASTA format using read data in FASTQ format. 
In addition to the specifications described below, this container MUST
implement all specifications defined in ['Generic bioinformatics container'](https://github.com/bioboxes/rfc/blob/master/rfc.mkd#generic-bioinformatics-container).

### Input

#### General Definition

A biobox requires an input YAML with the following definition 

```YAML
---
version: NUMBER.NUMBER.NUMBER
arguments:
  assemblies: LIST
  reads: LIST
  cache: STRING
```

##### Description:
* **version**: The current version is specified directly under the heading.
* **arguments**: The arguments field consists out of the following fields 
       * assemblies A list of assembly files in fasta format.
       * reads Fastqs
       * cache
       You can find a definition for every field below this section.

##### Mounts:
 * The .yaml MUST be mounted to /bbx/mnt/input/biobox.yaml.
 * Your output directory MUST be mounted to /bbx/mnt/output.
 * Your input files MUST be mounted to /bbx/mnt/input. 

#### assemblies definition: 
```YAML
- path: STRING
  id: STRING or NUMBER
  type: contig or scaffold
  format: bioboxes.org:/fasta
```

##### Description:
* **value**: Path MUST begin with a slash ('/'), which points to FASTA file. This file has to be mounted to a path that is prefixed by `/bbx/mnt/input`.
* **id**: A unique id for every entry in the fasta list (optional).
* **type**: Two options:
  * **contig**
  * **scaffold**

#### reads definition: 
```YAML
 - path: STRING
   id: STRING or NUMBER
   type: paired or single
   format: bioboxes.org:/fastq
```

##### Description:
* **value**: Path MUST begin with a slash ('/'), which points to gzipped FASTQ file. This file has to be mounted to a path that is prefixed by `/bbx/mnt/input`.
* **id**: A unique id for every entry in the fastq list (optional).
* **type**: Two options:
      * paired: Paired end fastq reads. By choosing this type, the **value** field hast to be interleaved gzipped fastq.
      * single: Single end gzipped fastq reads. 

#### cache definition (optional):

```YAML
  cache: STRING
```

##### Description:
* **cache**: Path to a writeable mounted directory. If mounted the tool will place intermediate results in this directory and reuse them on a second run.

### Outputs

The biobox produces on a successful run a `biobox.yaml` and can be found in the `bbx` directory in your mounted output directory. The output biobox.yaml must be in an evaluation specific [format](https://github.com/bioboxes/rfc/blob/master/data-format/evaluation.mkd).

##### Mounts:

 * If the directory `/bbx/mnt/metadata` is mounted then the following files should be placed inside the directory:
   * `log.txt` Logging information that is generated by the application inside the container.   

##### Formats
* `fasta`: FASTA file
* `fastq`: FASTQ file

### Signature

Any biobox based assembler accepts at least one of the following signatures:

1. `[fasta A], [fastq B] -> evaluation C`

### Example
This is an example biobox.yaml file:

```YAML
---
version: 0.2.0
arguments:
   assemblies:
     - path: /path/to/assembly1/fasta
       id: ray
       type: contig
       format: bioboxes.org:/fasta
   reads:
     - path: /path/to/short/read.fastq.gz
       id: lib1
       type: paired
       format: bioboxes.org:/fastq
```
